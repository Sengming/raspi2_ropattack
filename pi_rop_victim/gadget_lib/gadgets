Gadgets information
============================================================
0x00010848 : add fp, sp, #4 ; sub sp, sp, #8 ; ldr r0, [pc, #0x18] ; mov r1, #0x42 ; bl #0x106f8 ; str r0, [fp, #-8] ; ldr r0, [fp, #-8] ; bl #0x10734 ; sub sp, fp, #4 ; pop {fp, pc}
0x000107bc : add r1, r1, r1, lsr #31 ; asrs r1, r1, #1 ; bxeq lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x00010a20 : add r4, r4, #1 ; ldr r3, [r5, #4]! ; mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3
0x00010a20 : add r4, r4, #1 ; ldr r3, [r5, #4]! ; mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a40 ; pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x000101d4 : andeq r0, r0, r0 ; andeq r0, r0, r0 ; andeq r0, r0, r4, lsl r0 ; andeq r0, r0, r5, lsl r0 ; andeq r0, r0, r0 ; andeq r0, r0, r6, lsl r0 ; andeq r0, r0, r8, lsl r0 ; andeq r0, r0, sb, lsl r0 ; andeq r0, r0, r0 ; ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x000101d8 : andeq r0, r0, r0 ; andeq r0, r0, r4, lsl r0 ; andeq r0, r0, r5, lsl r0 ; andeq r0, r0, r0 ; andeq r0, r0, r6, lsl r0 ; andeq r0, r0, r8, lsl r0 ; andeq r0, r0, sb, lsl r0 ; andeq r0, r0, r0 ; ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x000101e4 : andeq r0, r0, r0 ; andeq r0, r0, r6, lsl r0 ; andeq r0, r0, r8, lsl r0 ; andeq r0, r0, sb, lsl r0 ; andeq r0, r0, r0 ; ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x000101f4 : andeq r0, r0, r0 ; ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x000107e0 : andeq r0, r0, r0 ; push {r4, lr} ; ldr r4, [pc, #0x18] ; ldrb r3, [r4] ; cmp r3, #0 ; popne {r4, pc} ; bl #0x107a0 ; mov r3, #1 ; strb r3, [r4] ; pop {r4, pc}
0x00010778 : andeq r0, r0, r0, asr #32 ; ldr r3, [pc, #0x1c] ; ldr r0, [pc, #0x1c] ; rsb r3, r0, r3 ; cmp r3, #6 ; bxls lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x000101dc : andeq r0, r0, r4, lsl r0 ; andeq r0, r0, r5, lsl r0 ; andeq r0, r0, r0 ; andeq r0, r0, r6, lsl r0 ; andeq r0, r0, r8, lsl r0 ; andeq r0, r0, sb, lsl r0 ; andeq r0, r0, r0 ; ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x000101e0 : andeq r0, r0, r5, lsl r0 ; andeq r0, r0, r0 ; andeq r0, r0, r6, lsl r0 ; andeq r0, r0, r8, lsl r0 ; andeq r0, r0, sb, lsl r0 ; andeq r0, r0, r0 ; ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x00010654 : andeq r0, r0, r6, lsl ip ; andeq r0, r2, ip, asr #24 ; andeq r1, r0, r6, lsl r7 ; push {r3, lr} ; bl #0x1076c ; pop {r3, pc}
0x000101e8 : andeq r0, r0, r6, lsl r0 ; andeq r0, r0, r8, lsl r0 ; andeq r0, r0, sb, lsl r0 ; andeq r0, r0, r0 ; ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x0001064c : andeq r0, r0, r6, lsl sl ; andeq r0, r2, r8, asr #24 ; andeq r0, r0, r6, lsl ip ; andeq r0, r2, ip, asr #24 ; andeq r1, r0, r6, lsl r7 ; push {r3, lr} ; bl #0x10774 ; pop {r3, pc}
0x000101ec : andeq r0, r0, r8, lsl r0 ; andeq r0, r0, sb, lsl r0 ; andeq r0, r0, r0 ; ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x000101f0 : andeq r0, r0, sb, lsl r0 ; andeq r0, r0, r0 ; ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x00010a48 : andeq r0, r1, r8, ror #1 ; bx lr
0x00010a48 : andeq r0, r1, r8, ror #1 ; bx lr ; push {r3, lr} ; pop {r3, pc}
0x00010658 : andeq r0, r2, ip, asr #24 ; andeq r1, r0, r6, lsl r7 ; push {r3, lr} ; bl #0x10768 ; pop {r3, pc}
0x00010648 : andeq r0, r2, r4, asr #24 ; andeq r0, r0, r6, lsl sl ; andeq r0, r2, r8, asr #24 ; andeq r0, r0, r6, lsl ip ; andeq r0, r2, ip, asr #24 ; andeq r1, r0, r6, lsl r7 ; push {r3, lr} ; bl #0x10778 ; pop {r3, pc}
0x00010650 : andeq r0, r2, r8, asr #24 ; andeq r0, r0, r6, lsl ip ; andeq r0, r2, ip, asr #24 ; andeq r1, r0, r6, lsl r7 ; push {r3, lr} ; bl #0x10770 ; pop {r3, pc}
0x00010644 : andeq r1, r0, r6, lsl r3 ; andeq r0, r2, r4, asr #24 ; andeq r0, r0, r6, lsl sl ; andeq r0, r2, r8, asr #24 ; andeq r0, r0, r6, lsl ip ; andeq r0, r2, ip, asr #24 ; andeq r1, r0, r6, lsl r7 ; push {r3, lr} ; bl #0x1077c ; pop {r3, pc}
0x0001065c : andeq r1, r0, r6, lsl r7 ; push {r3, lr} ; bl #0x10764 ; pop {r3, pc}
0x000107b8 : asr r1, r1, #2 ; add r1, r1, r1, lsr #31 ; asrs r1, r1, #1 ; bxeq lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x000107c0 : asrs r1, r1, #1 ; bxeq lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x00010a10 : asrs r6, r6, #2 ; popeq {r3, r4, r5, r6, r7, r8, sb, pc} ; sub r5, r5, #4 ; mov r4, #0 ; add r4, r4, #1 ; ldr r3, [r5, #4]! ; mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3
0x00010824 : b #0x107bc ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; beq #0x10830 ; blx r3
0x000109b0 : b #0x109e0 ; ldr r0, [fp, #-0x10] ; ldr r1, [fp, #-0x14] ; bl #0x10890 ; mov r3, #0 ; mov r0, r3 ; sub sp, fp, #8 ; pop {r4, fp, pc}
0x00010830 : beq #0x10824 ; blx r3
0x00010858 : bl #0x106e8 ; str r0, [fp, #-8] ; ldr r0, [fp, #-8] ; bl #0x10724 ; sub sp, fp, #4 ; pop {fp, pc}
0x000109a8 : bl #0x10704 ; mov r3, #1 ; b #0x109e8 ; ldr r0, [fp, #-0x10] ; ldr r1, [fp, #-0x14] ; bl #0x10898 ; mov r3, #0 ; mov r0, r3 ; sub sp, fp, #8 ; pop {r4, fp, pc}
0x000108e8 : bl #0x10708 ; ldr r0, [fp, #-0x1c] ; bl #0x10720 ; sub sp, fp, #4 ; pop {fp, pc}
0x00010864 : bl #0x10718 ; sub sp, fp, #4 ; pop {fp, pc}
0x00010664 : bl #0x1075c ; pop {r3, pc}
0x000107f8 : bl #0x10788 ; mov r3, #1 ; strb r3, [r4] ; pop {r4, pc}
0x000109bc : bl #0x10884 ; mov r3, #0 ; mov r0, r3 ; sub sp, fp, #8 ; pop {r4, fp, pc}
0x00010834 : blx r3
0x00010a34 : blx r3 ; cmp r4, r6 ; bne #0x10a2c ; pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x00010a34 : blx r3 ; cmp r4, r6 ; bne #0x10a38 ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr
0x00010a34 : blx r3 ; cmp r4, r6 ; bne #0x10a40 ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr ; push {r3, lr} ; pop {r3, pc}
0x0001081c : bne #0x10840 ; pop {r3, lr} ; b #0x107c4 ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; beq #0x10838 ; blx r3
0x00010a3c : bne #0x10a24 ; pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x00010a3c : bne #0x10a30 ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr
0x00010a3c : bne #0x10a38 ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr ; push {r3, lr} ; pop {r3, pc}
0x00010a4c : bx lr
0x00010a4c : bx lr ; push {r3, lr} ; pop {r3, pc}
0x0001079c : bx r3
0x00010798 : bxeq lr ; bx r3
0x000107c4 : bxeq lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x0001078c : bxls lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x0001082c : cmp r3, #0 ; beq #0x10828 ; blx r3
0x00010818 : cmp r3, #0 ; bne #0x10844 ; pop {r3, lr} ; b #0x107c8 ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; beq #0x1083c ; blx r3
0x00010794 : cmp r3, #0 ; bxeq lr ; bx r3
0x000107f0 : cmp r3, #0 ; popne {r4, pc} ; bl #0x10790 ; mov r3, #1 ; strb r3, [r4] ; pop {r4, pc}
0x00010788 : cmp r3, #6 ; bxls lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x00010a38 : cmp r4, r6 ; bne #0x10a28 ; pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x00010a38 : cmp r4, r6 ; bne #0x10a34 ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr
0x00010a38 : cmp r4, r6 ; bne #0x10a3c ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr ; push {r3, lr} ; pop {r3, pc}
0x000101f8 : ldmda r4!, {r0, r8, sb, sl, fp, sp, pc}
0x000109b4 : ldr r0, [fp, #-0x10] ; ldr r1, [fp, #-0x14] ; bl #0x1088c ; mov r3, #0 ; mov r0, r3 ; sub sp, fp, #8 ; pop {r4, fp, pc}
0x000108ec : ldr r0, [fp, #-0x1c] ; bl #0x1071c ; sub sp, fp, #4 ; pop {fp, pc}
0x000108dc : ldr r0, [fp, #-0x1c] ; mov r1, r2 ; mov r2, r3 ; bl #0x10714 ; ldr r0, [fp, #-0x1c] ; bl #0x1072c ; sub sp, fp, #4 ; pop {fp, pc}
0x00010860 : ldr r0, [fp, #-8] ; bl #0x1071c ; sub sp, fp, #4 ; pop {fp, pc}
0x00010850 : ldr r0, [pc, #0x18] ; mov r1, #0x42 ; bl #0x106f0 ; str r0, [fp, #-8] ; ldr r0, [fp, #-8] ; bl #0x1072c ; sub sp, fp, #4 ; pop {fp, pc}
0x00010780 : ldr r0, [pc, #0x1c] ; rsb r3, r0, r3 ; cmp r3, #6 ; bxls lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x00010810 : ldr r0, [pc, #0x24] ; ldr r3, [r0] ; cmp r3, #0 ; bne #0x1084c ; pop {r3, lr} ; b #0x107d0 ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; beq #0x10844 ; blx r3
0x000107b0 : ldr r0, [pc, #0x24] ; rsb r1, r0, r1 ; asr r1, r1, #2 ; add r1, r1, r1, lsr #31 ; asrs r1, r1, #1 ; bxeq lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x000109b8 : ldr r1, [fp, #-0x14] ; bl #0x10888 ; mov r3, #0 ; mov r0, r3 ; sub sp, fp, #8 ; pop {r4, fp, pc}
0x000108d4 : ldr r3, [fp, #-0x14] ; sub r2, fp, #0x10 ; ldr r0, [fp, #-0x1c] ; mov r1, r2 ; mov r2, r3 ; bl #0x1071c ; ldr r0, [fp, #-0x1c] ; bl #0x10734 ; sub sp, fp, #4 ; pop {fp, pc}
0x00010828 : ldr r3, [pc, #0x10] ; cmp r3, #0 ; beq #0x1082c ; blx r3
0x00010790 : ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x0001077c : ldr r3, [pc, #0x1c] ; ldr r0, [pc, #0x1c] ; rsb r3, r0, r3 ; cmp r3, #6 ; bxls lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x00010814 : ldr r3, [r0] ; cmp r3, #0 ; bne #0x10848 ; pop {r3, lr} ; b #0x107cc ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; beq #0x10840 ; blx r3
0x00010a24 : ldr r3, [r5, #4]! ; mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3
0x00010a24 : ldr r3, [r5, #4]! ; mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a3c ; pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x000107e8 : ldr r4, [pc, #0x18] ; ldrb r3, [r4] ; cmp r3, #0 ; popne {r4, pc} ; bl #0x10798 ; mov r3, #1 ; strb r3, [r4] ; pop {r4, pc}
0x000107ec : ldrb r3, [r4] ; cmp r3, #0 ; popne {r4, pc} ; bl #0x10794 ; mov r3, #1 ; strb r3, [r4] ; pop {r4, pc}
0x000109c4 : mov r0, r3 ; sub sp, fp, #8 ; pop {r4, fp, pc}
0x00010a28 : mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3
0x00010a28 : mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a38 ; pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x00010a28 : mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a44 ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr
0x00010854 : mov r1, #0x42 ; bl #0x106ec ; str r0, [fp, #-8] ; ldr r0, [fp, #-8] ; bl #0x10728 ; sub sp, fp, #4 ; pop {fp, pc}
0x000108e0 : mov r1, r2 ; mov r2, r3 ; bl #0x10710 ; ldr r0, [fp, #-0x1c] ; bl #0x10728 ; sub sp, fp, #4 ; pop {fp, pc}
0x00010a2c : mov r1, r8 ; mov r2, sb ; blx r3
0x00010a2c : mov r1, r8 ; mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a34 ; pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x00010a2c : mov r1, r8 ; mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a40 ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr
0x000108e4 : mov r2, r3 ; bl #0x1070c ; ldr r0, [fp, #-0x1c] ; bl #0x10724 ; sub sp, fp, #4 ; pop {fp, pc}
0x00010a30 : mov r2, sb ; blx r3
0x00010a30 : mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a30 ; pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x00010a30 : mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a3c ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr
0x00010a30 : mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a44 ; pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr ; push {r3, lr} ; pop {r3, pc}
0x000109c0 : mov r3, #0 ; mov r0, r3 ; sub sp, fp, #8 ; pop {r4, fp, pc}
0x000109ac : mov r3, #1 ; b #0x109e4 ; ldr r0, [fp, #-0x10] ; ldr r1, [fp, #-0x14] ; bl #0x10894 ; mov r3, #0 ; mov r0, r3 ; sub sp, fp, #8 ; pop {r4, fp, pc}
0x000107fc : mov r3, #1 ; strb r3, [r4] ; pop {r4, pc}
0x00010a1c : mov r4, #0 ; add r4, r4, #1 ; ldr r3, [r5, #4]! ; mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3
0x00010a1c : mov r4, #0 ; add r4, r4, #1 ; ldr r3, [r5, #4]! ; mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3 ; cmp r4, r6 ; bne #0x10a44 ; pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x0001086c : pop {fp, pc}
0x00010820 : pop {r3, lr} ; b #0x107c0 ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; beq #0x10834 ; blx r3
0x00010668 : pop {r3, pc}
0x00010a40 : pop {r3, r4, r5, r6, r7, r8, sb, pc}
0x00010a40 : pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr
0x00010a40 : pop {r3, r4, r5, r6, r7, r8, sb, pc} ; strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr ; push {r3, lr} ; pop {r3, pc}
0x000109cc : pop {r4, fp, pc}
0x00010804 : pop {r4, pc}
0x00010a14 : popeq {r3, r4, r5, r6, r7, r8, sb, pc} ; sub r5, r5, #4 ; mov r4, #0 ; add r4, r4, #1 ; ldr r3, [r5, #4]! ; mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3
0x000107f4 : popne {r4, pc} ; bl #0x1078c ; mov r3, #1 ; strb r3, [r4] ; pop {r4, pc}
0x00010660 : push {r3, lr} ; bl #0x10760 ; pop {r3, pc}
0x00010a50 : push {r3, lr} ; pop {r3, pc}
0x000107e4 : push {r4, lr} ; ldr r4, [pc, #0x18] ; ldrb r3, [r4] ; cmp r3, #0 ; popne {r4, pc} ; bl #0x1079c ; mov r3, #1 ; strb r3, [r4] ; pop {r4, pc}
0x000107b4 : rsb r1, r0, r1 ; asr r1, r1, #2 ; add r1, r1, r1, lsr #31 ; asrs r1, r1, #1 ; bxeq lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x00010784 : rsb r3, r0, r3 ; cmp r3, #6 ; bxls lr ; ldr r3, [pc, #0x10] ; cmp r3, #0 ; bxeq lr ; bx r3
0x0001085c : str r0, [fp, #-8] ; ldr r0, [fp, #-8] ; bl #0x10720 ; sub sp, fp, #4 ; pop {fp, pc}
0x00010800 : strb r3, [r4] ; pop {r4, pc}
0x00010a44 : strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr
0x00010a44 : strdeq r0, r1, [r1], -r0 ; andeq r0, r1, r8, ror #1 ; bx lr ; push {r3, lr} ; pop {r3, pc}
0x000108d8 : sub r2, fp, #0x10 ; ldr r0, [fp, #-0x1c] ; mov r1, r2 ; mov r2, r3 ; bl #0x10718 ; ldr r0, [fp, #-0x1c] ; bl #0x10730 ; sub sp, fp, #4 ; pop {fp, pc}
0x00010a18 : sub r5, r5, #4 ; mov r4, #0 ; add r4, r4, #1 ; ldr r3, [r5, #4]! ; mov r0, r7 ; mov r1, r8 ; mov r2, sb ; blx r3
0x00010868 : sub sp, fp, #4 ; pop {fp, pc}
0x000109c8 : sub sp, fp, #8 ; pop {r4, fp, pc}
0x0001084c : sub sp, sp, #8 ; ldr r0, [pc, #0x18] ; mov r1, #0x42 ; bl #0x106f4 ; str r0, [fp, #-8] ; ldr r0, [fp, #-8] ; bl #0x10730 ; sub sp, fp, #4 ; pop {fp, pc}

Unique gadgets found: 121

[Error] ROPMaker.__handlerArch - Arch not supported yet for the rop chain generation
